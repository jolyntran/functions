:root {
  --font-main: 'Onest', sans-serif;

  --font-size-base: 16px;
  --font-size-heading: 11px;
  --font-size-label: 11px;

  --padding-body: .5rem;
  --padding-card: 0.75rem;
  --gap-main: 1.5rem;
  --gap-card-content: 4px;

  --card-width: 20rem;
  --card-radius: 5px;
  --swatch-height: 1rem;

  --slider-height: 1rem;
  --thumb-size: 1rem;

  --color-bg: #f4f4f4;
  --color-text: #111;
  --color-muted: #333;
  --color-white: #fff;
  --color-border: #e3e3e3;

  --color-red: #f94144;
  --color-orange: #f8961e;
  --color-yellow: #f9c64f;
  --color-green: #90be6d;
  --color-blue: #598ab5;
  --color-violet: #925cbf;
  --color-pink: #ed8ceb;
  --color-brown: #907457;
  --color-gray: #999999;
  --color-white-noise: #eeeeee;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: var(--font-main);
  /* background: var(--color-bg); */
  color: var(--color-text);
  padding: var(--padding-body);
  background: linear-gradient(106deg,#003973,#000000);
  background-size: 120% 120%;
  animation: gradient-animation 14s ease infinite;
}
  
@keyframes body {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}


main {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: var(--gap-main);
}

.noise-control {
  width: var(--card-width);
  border-radius: var(--card-radius);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: stretch;
  box-shadow: 0 4px 4px rgba(0, 0, 0, 0.09);
}

.swatch {
  height: var(--swatch-height);
  width: 100%;
  backdrop-filter: blur(6px);
  -webkit-backdrop-filter: blur(6px);
  background: var(--swatch-color);
  border-bottom: 1px solid rgba(255, 255, 255, 0.15);
}

.controls {
  padding: var(--padding-card);
  width: 100%;
  display: flex;
  flex-direction: column;
  text-align: left;
  gap: var(--gap-card-content);
  background: rgb(255, 255, 255);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border-top: 1px solid rgba(255, 255, 255, 0.2);
}

h2 {
  font-size: var(--font-size-heading);
  font-weight: 700;
  text-transform: uppercase;
  width: 100%;
  line-height: 1.2;
}

.volume-display {
  font-weight: bold;
  font-size: var(--font-size-label);
  display: block;
  width: 100%;
}

/* I wanted a colored slider for my interface. */
/* I found this CodePen by Shashank: https://codepen.io/shashank_coder/pen/jOqxOpK */
/* This slider uses a long box-shadow on the thumb to simulate a filled track */
.range {
  width: 100%;
  height: var(--slider-height);
  background: var(--color-border);
  border-radius: calc(var(--slider-height) / 2);
  overflow: hidden;
  outline: none;
  color: var(--swatch-color);
}

.range::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: var(--thumb-size);
  height: var(--thumb-size);
  border-radius: 50%;
  cursor: pointer;
  border: 5px solid #ffffff;
  box-shadow: -405px 0 0 400px currentColor;
}

header {
  margin-top: 2rem;  
  margin-bottom: 2rem;
  text-align: center;
}

header h2 {
  color: var(--color-bg);
  font-size: calc(var(--font-size-heading) + 0.2rem);
  margin-bottom: 0.5rem;
}

#masterVolume {
  max-width: 400px;
  width: 90%;
  margin: 0.5rem auto;
  display: block;
  color: var(--color-bg);
}

#masterVolumeDisplay {
  display: block;
  font-weight: 500;
  margin-top: 0.5rem;
  color: var(--color-bg);
}

header button {
  background: #007aff;
  color: var(--color-white);
  font-size: var(--font-size-label);
  padding: 0.6rem 1.2rem;
  margin: 0.5rem;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.3s;
}

header button:hover {
  background: #005bb5;
}


@media (min-width: 900px) {
  :root {
    --card-width: 15rem;
    --swatch-height: 12rem;
    --font-size-heading: 1.25rem;
    --font-size-label: 1.25rem;
    --padding-card: 1.2rem;
  }

/* I wanted the noise cards to overlap and shift smoothly when hovered for a layered, dynamic feel. */
/* I referenced this card stack animation pattern from CodePen: https://codepen.io/aaroniker/pen/ZEbqQwM */
/* The effect uses negative margins to overlap cards and the general sibling selector (~) to shift later cards when one is hovered. */
  /* main {
    justify-content: flex-start;
    gap: 0;
    padding-left: 4rem;
  }

  .noise-control {
    position: relative;
    transition: transform 0.4s ease-out, left 0.4s ease-out;
    margin-left: -3rem;
    z-index: 1;
  }

  .noise-control:first-child {
    margin-left: 0;
  }

  .noise-control:hover {
    transform: translateY(-20px);
    z-index: 10;
  }

  .noise-control:hover ~ .noise-control {
    left: 3.5rem;
  } */
}
